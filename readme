npx hardhat console --network localhost
Welcome to Node.js v20.16.0.
Type ".help" for more information.
>
>  let NewHelloAbi = require('./contractsData/Hello.json');
Uncaught Error: Cannot find module './contractsData/Hello.json'
Require stack:
- <repl>
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:1145:15)
    at Function.Module._load (node:internal/modules/cjs/loader:986:27)
    at Module.require (node:internal/modules/cjs/loader:1233:19)
    at require (node:internal/modules/helpers:179:18) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '<repl>' ]
}
> ^Z
[3]+  Stopped                 npx hardhat console --network localhost
ubuntu@ip-172-31-35-138:~/hello$ cd src
ubuntu@ip-172-31-35-138:~/hello/src$ npx hardhat console --network localhost
^[[AWelcome to Node.js v20.16.0.
Type ".help" for more information.
>  let NewHelloAbi = require('./contractsData/Hello.json');
undefined
> NewHelloAbi
{
  _format: 'hh-sol-artifact-1',
  contractName: 'Hello',
  sourceName: 'contracts/Hello.sol',
  abi: [
    {
      anonymous: false,
      inputs: [Array],
      name: 'myEventTest',
      type: 'event'
    },
    {
      inputs: [],
      name: 'get',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'set',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'storedData',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    }
  ],
  bytecode: '0x608060405234801561001057600080fd5b5061076a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632a1afcd9146100465780634ed3885e146100645780636d4ce63c14610080575b600080fd5b61004e61009e565b60405161005b9190610298565b60405180910390f35b61007e60048036038101906100799190610403565b61012c565b005b610088610176565b6040516100959190610298565b60405180910390f35b600080546100ab9061047b565b80601f01602080910402602001604051908101604052809291908181526020018280546100d79061047b565b80156101245780601f106100f957610100808354040283529160200191610124565b820191906000526020600020905b81548152906001019060200180831161010757829003601f168201915b505050505081565b806000908161013b9190610662565b507f319b9e64f64b033d6b8102f9688735cefac53d266b6e85d21cf85e9856fc7b998160405161016b9190610298565b60405180910390a150565b6060600080546101859061047b565b80601f01602080910402602001604051908101604052809291908181526020018280546101b19061047b565b80156101fe5780601f106101d3576101008083540402835291602001916101fe565b820191906000526020600020905b8154815290600101906020018083116101e157829003601f168201915b5050505050905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610242578082015181840152602081019050610227565b60008484015250505050565b6000601f19601f8301169050919050565b600061026a82610208565b6102748185610213565b9350610284818560208601610224565b61028d8161024e565b840191505092915050565b600060208201905081810360008301526102b2818461025f565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103108261024e565b810181811067ffffffffffffffff8211171561032f5761032e6102d8565b5b80604052505050565b60006103426102ba565b905061034e8282610307565b919050565b600067ffffffffffffffff82111561036e5761036d6102d8565b5b6103778261024e565b9050602081019050919050565b82818337600083830152505050565b60006103a66103a184610353565b610338565b9050828152602081018484840111156103c2576103c16102d3565b5b6103cd848285610384565b509392505050565b600082601f8301126103ea576103e96102ce565b5b81356103fa848260208601610393565b91505092915050565b600060208284031215610419576104186102c4565b5b600082013567ffffffffffffffff811115610437576104366102c9565b5b610443848285016103d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061049357607f821691505b6020821081036104a6576104a561044c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261050e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826104d1565b61051886836104d1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061055f61055a61055584610530565b61053a565b610530565b9050919050565b6000819050919050565b61057983610544565b61058d61058582610566565b8484546104de565b825550505050565b600090565b6105a2610595565b6105ad818484610570565b505050565b5b818110156105d1576105c660008261059a565b6001810190506105b3565b5050565b601f821115610616576105e7816104ac565b6105f0846104c1565b810160208510156105ff578190505b61061361060b856104c1565b8301826105b2565b50505b505050565b600082821c905092915050565b60006106396000198460080261061b565b1980831691505092915050565b60006106528383610628565b9150826002028217905092915050565b61066b82610208565b67ffffffffffffffff811115610684576106836102d8565b5b61068e825461047b565b6106998282856105d5565b600060209050601f8311600181146106cc57600084156106ba578287015190505b6106c48582610646565b86555061072c565b601f1984166106da866104ac565b60005b82811015610702578489015182556001820191506020850194506020810190506106dd565b8683101561071f578489015161071b601f891682610628565b8355505b6001600288020188555050505b50505050505056fea264697066735822122012a16a1c6f4af63d96961db46b301605e7c4ad68c57701d6eb4b873cbc01cadb64736f6c63430008120033',
  deployedBytecode: '0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632a1afcd9146100465780634ed3885e146100645780636d4ce63c14610080575b600080fd5b61004e61009e565b60405161005b9190610298565b60405180910390f35b61007e60048036038101906100799190610403565b61012c565b005b610088610176565b6040516100959190610298565b60405180910390f35b600080546100ab9061047b565b80601f01602080910402602001604051908101604052809291908181526020018280546100d79061047b565b80156101245780601f106100f957610100808354040283529160200191610124565b820191906000526020600020905b81548152906001019060200180831161010757829003601f168201915b505050505081565b806000908161013b9190610662565b507f319b9e64f64b033d6b8102f9688735cefac53d266b6e85d21cf85e9856fc7b998160405161016b9190610298565b60405180910390a150565b6060600080546101859061047b565b80601f01602080910402602001604051908101604052809291908181526020018280546101b19061047b565b80156101fe5780601f106101d3576101008083540402835291602001916101fe565b820191906000526020600020905b8154815290600101906020018083116101e157829003601f168201915b5050505050905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610242578082015181840152602081019050610227565b60008484015250505050565b6000601f19601f8301169050919050565b600061026a82610208565b6102748185610213565b9350610284818560208601610224565b61028d8161024e565b840191505092915050565b600060208201905081810360008301526102b2818461025f565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103108261024e565b810181811067ffffffffffffffff8211171561032f5761032e6102d8565b5b80604052505050565b60006103426102ba565b905061034e8282610307565b919050565b600067ffffffffffffffff82111561036e5761036d6102d8565b5b6103778261024e565b9050602081019050919050565b82818337600083830152505050565b60006103a66103a184610353565b610338565b9050828152602081018484840111156103c2576103c16102d3565b5b6103cd848285610384565b509392505050565b600082601f8301126103ea576103e96102ce565b5b81356103fa848260208601610393565b91505092915050565b600060208284031215610419576104186102c4565b5b600082013567ffffffffffffffff811115610437576104366102c9565b5b610443848285016103d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061049357607f821691505b6020821081036104a6576104a561044c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261050e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826104d1565b61051886836104d1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061055f61055a61055584610530565b61053a565b610530565b9050919050565b6000819050919050565b61057983610544565b61058d61058582610566565b8484546104de565b825550505050565b600090565b6105a2610595565b6105ad818484610570565b505050565b5b818110156105d1576105c660008261059a565b6001810190506105b3565b5050565b601f821115610616576105e7816104ac565b6105f0846104c1565b810160208510156105ff578190505b61061361060b856104c1565b8301826105b2565b50505b505050565b600082821c905092915050565b60006106396000198460080261061b565b1980831691505092915050565b60006106528383610628565b9150826002028217905092915050565b61066b82610208565b67ffffffffffffffff811115610684576106836102d8565b5b61068e825461047b565b6106998282856105d5565b600060209050601f8311600181146106cc57600084156106ba578287015190505b6106c48582610646565b86555061072c565b601f1984166106da866104ac565b60005b82811015610702578489015182556001820191506020850194506020810190506106dd565b8683101561071f578489015161071b601f891682610628565b8355505b6001600288020188555050505b50505050505056fea264697066735822122012a16a1c6f4af63d96961db46b301605e7c4ad68c57701d6eb4b873cbc01cadb64736f6c63430008120033',
  linkReferences: {},
  deployedLinkReferences: {}
}
>
> let  HelloAddress = require('./contractsData/Hello-address.json');
undefined
> HelloAddress
{ address: '0x5FbDB2315678afecb367f032d93F642f64180aa3' }
> const provider19 = new ethers.JsonRpcProvider("http://ec2-18-246-218-128.us-west-2.compute.amazonaws.com:8545")
undefined
>
>
> const contract = new ethers.Contract(HelloAddress.address, HelloAbi, provider);
Uncaught ReferenceError: HelloAbi is not defined
> const contract = new ethers.Contract(HelloAddress.address, NewHelloAbi, provider);
Uncaught SyntaxError: Identifier 'contract' has already been declared
> const contract2 = new ethers.Contract(HelloAddress.address, NewHelloAbi, provider);
Uncaught ReferenceError: provider is not defined
> const contract3 = new ethers.Contract(HelloAddress.address, NewHelloAbi, provider19);
Uncaught TypeError: abi is not iterable
    at new Interface (/home/ubuntu/hello/node_modules/ethers/src.ts/abi/interface.ts:342:25)
    at Function.from (/home/ubuntu/hello/node_modules/ethers/src.ts/abi/interface.ts:1269:16)
    at new BaseContract (/home/ubuntu/hello/node_modules/ethers/src.ts/contract/contract.ts:690:33)
    at new Contract (/home/ubuntu/hello/node_modules/ethers/src.ts/contract/contract.ts:1120:1)
> const contract3 = new ethers.Contract(HelloAddress.address, NewHelloAbi.abi, provider19);
Uncaught SyntaxError: Identifier 'contract3' has already been declared
> const contract4 = new ethers.Contract(HelloAddress.address, NewHelloAbi.abi, provider19);
undefined
> contract4
Contract {
  target: '0x5FbDB2315678afecb367f032d93F642f64180aa3',
  interface: Interface {
    fragments: [
      [EventFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment]
    ],
    deploy: ConstructorFragment {
      type: 'constructor',
      inputs: [],
      payable: false,
      gas: null
    },
    fallback: null,
    receive: false
  },
  runner: JsonRpcProvider {},
  filters: {},
  fallback: null,
  [Symbol(_ethersInternal_contract)]: {}
}
>
> contract4.on(filter, (info) => {  console.log("info",info); });
Uncaught ReferenceError: filter is not defined
>
> const filter = contract.filters.myEventTest(null)
Uncaught ReferenceError: contract is not defined
> const filter4 = contract4.filters.myEventTest(null)
undefined
> contract4.on(filter4, (info) => {  console.log("info",info); });
Promise {
  <pending>,
  [Symbol(async_id_symbol)]: 549,
  [Symbol(trigger_async_id_symbol)]: 15
}
> contract4.set("hhhhh")
Promise {
  <pending>,
  [Symbol(async_id_symbol)]: 1310,
  [Symbol(trigger_async_id_symbol)]: 15
}
> Uncaught:
Error: contract runner does not support sending transactions (operation="sendTransaction", code=UNSUPPORTED_OPERATION, version=6.13.2)
    at makeError (/home/ubuntu/hello/node_modules/ethers/src.ts/utils/errors.ts:694:21)
    at assert (/home/ubuntu/hello/node_modules/ethers/src.ts/utils/errors.ts:715:25)
    at send (/home/ubuntu/hello/node_modules/ethers/src.ts/contract/contract.ts:310:15)
    at Proxy.set (/home/ubuntu/hello/node_modules/ethers/src.ts/contract/contract.ts:352:22) {
  code: 'UNSUPPORTED_OPERATION',
  operation: 'sendTransaction',
  shortMessage: 'contract runner does not support sending transactions'
}
>
> const filter = contract.filters.myEventTest(null
> const signers = await ethers.getSigners();
undefined
> contract4.set("hhhhh", { from: signers[0])
contract4.set("hhhhh", { from: signers[0])
                                         ^

Uncaught SyntaxError: Unexpected token ')'
> contract4.set("hhhhh", { from: signers[0]})
Promise {
  <pending>,
  [Symbol(async_id_symbol)]: 4109,
  [Symbol(trigger_async_id_symbol)]: 15
}
> Uncaught:
Error: contract runner does not support sending transactions (operation="sendTransaction", code=UNSUPPORTED_OPERATION, version=6.13.2)
    at makeError (/home/ubuntu/hello/node_modules/ethers/src.ts/utils/errors.ts:694:21)
    at assert (/home/ubuntu/hello/node_modules/ethers/src.ts/utils/errors.ts:715:25)
    at send (/home/ubuntu/hello/node_modules/ethers/src.ts/contract/contract.ts:310:15)
    at Proxy.set (/home/ubuntu/hello/node_modules/ethers/src.ts/contract/contract.ts:352:22) {
  code: 'UNSUPPORTED_OPERATION',
  operation: 'sendTransaction',
  shortMessage: 'contract runner does not support sending transactions'
}
> contract4.deploy()
Uncaught TypeError: contract4.deploy is not a function
> contract4.set("hhhhh", { from: signers[0]}  )
Promise {
  <pending>,
  [Symbol(async_id_symbol)]: 6650,
  [Symbol(trigger_async_id_symbol)]: 15
}
> Uncaught:
Error: contract runner does not support sending transactions (operation="sendTransaction", code=UNSUPPORTED_OPERATION, version=6.13.2)
    at makeError (/home/ubuntu/hello/node_modules/ethers/src.ts/utils/errors.ts:694:21)
    at assert (/home/ubuntu/hello/node_modules/ethers/src.ts/utils/errors.ts:715:25)
    at send (/home/ubuntu/hello/node_modules/ethers/src.ts/contract/contract.ts:310:15)
    at Proxy.set (/home/ubuntu/hello/node_modules/ethers/src.ts/contract/contract.ts:352:22) {
  code: 'UNSUPPORTED_OPERATION',
  operation: 'sendTransaction',
  shortMessage: 'contract runner does not support sending transactions'
}
> contract4.set("hhhhh")
Promise {
  <pending>,
  [Symbol(async_id_symbol)]: 6781,
  [Symbol(trigger_async_id_symbol)]: 15
}
> Uncaught:
Error: contract runner does not support sending transactions (operation="sendTransaction", code=UNSUPPORTED_OPERATION, version=6.13.2)
    at makeError (/home/ubuntu/hello/node_modules/ethers/src.ts/utils/errors.ts:694:21)
    at assert (/home/ubuntu/hello/node_modules/ethers/src.ts/utils/errors.ts:715:25)
    at send (/home/ubuntu/hello/node_modules/ethers/src.ts/contract/contract.ts:310:15)
    at Proxy.set (/home/ubuntu/hello/node_modules/ethers/src.ts/contract/contract.ts:352:22) {
  code: 'UNSUPPORTED_OPERATION',
  operation: 'sendTransaction',
  shortMessage: 'contract runner does not support sending transactions'
}
> const contract4 = new ethers.Contract(HelloAddress.address, NewHelloAbi.abi, provider19);
